/*
cui_schema.sql

Author: T04-Group041
Date:   2nd May, 2023
*/

SET ECHO ON
SPOOL cui_schema_output.txt

-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-05-02 23:23:55 SGT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE authorised_truck CASCADE CONSTRAINTS;

DROP TABLE authorised_truck_driver CASCADE CONSTRAINTS;

DROP TABLE bin CASCADE CONSTRAINTS;

DROP TABLE bin_contract CASCADE CONSTRAINTS;

DROP TABLE bin_type CASCADE CONSTRAINTS;

DROP TABLE collection_bin CASCADE CONSTRAINTS;

DROP TABLE collection_detail CASCADE CONSTRAINTS;

DROP TABLE collection_report CASCADE CONSTRAINTS;

DROP TABLE contract CASCADE CONSTRAINTS;

DROP TABLE driver CASCADE CONSTRAINTS;

DROP TABLE local_authority CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE owner_property CASCADE CONSTRAINTS;

DROP TABLE property CASCADE CONSTRAINTS;

DROP TABLE street CASCADE CONSTRAINTS;

DROP TABLE waste_type CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE authorised_truck (
    truck_vin     VARCHAR2(17) NOT NULL,
    truck_rego_no VARCHAR2(9) NOT NULL,
    truck_make    VARCHAR2(10) NOT NULL,
    truck_model   VARCHAR2(20) NOT NULL,
    truck_year    CHAR(4) NOT NULL
);

COMMENT ON COLUMN authorised_truck.truck_vin IS
    'truck vin ';

COMMENT ON COLUMN authorised_truck.truck_rego_no IS
    'truck rego number';

COMMENT ON COLUMN authorised_truck.truck_make IS
    'truck make ';

COMMENT ON COLUMN authorised_truck.truck_model IS
    'truck model';

COMMENT ON COLUMN authorised_truck.truck_year IS
    'truck year
';

ALTER TABLE authorised_truck ADD CONSTRAINT authorised_truck_pk PRIMARY KEY ( truck_vin
);

CREATE TABLE authorised_truck_driver (
    truck_vin        VARCHAR2(17) NOT NULL,
    driver_no        NUMBER(2) NOT NULL,
    date_of_approval DATE NOT NULL
);

COMMENT ON COLUMN authorised_truck_driver.truck_vin IS
    'truck vin ';

COMMENT ON COLUMN authorised_truck_driver.driver_no IS
    'driver number';

COMMENT ON COLUMN authorised_truck_driver.date_of_approval IS
    'Date of approval';

ALTER TABLE authorised_truck_driver ADD CONSTRAINT trial_pk PRIMARY KEY ( truck_vin,
                                                                          driver_no )
                                                                          ;

CREATE TABLE bin (
    bin_rfid           CHAR(16) NOT NULL,
    bin_supply_date    DATE NOT NULL,
    bin_replace_reason VARCHAR2(50) NOT NULL,
    property_street_no NUMBER(10) NOT NULL,
    street_id          NUMBER(10) NOT NULL,
    auth_name          VARCHAR2(50) NOT NULL,
    bin_size           NUMBER(3) NOT NULL,
    waste_type_id      CHAR(2) NOT NULL
);

ALTER TABLE bin
    ADD CONSTRAINT chk_bin_replace_reason CHECK ( bin_replace_reason IN ( 'BF', 'DO',
    'DP', 'ST' ) );

COMMENT ON COLUMN bin.bin_rfid IS
    'Bin RFID';

COMMENT ON COLUMN bin.bin_supply_date IS
    'Bin Supply Date';

COMMENT ON COLUMN bin.bin_replace_reason IS
    'Bin Replacement Reason';

COMMENT ON COLUMN bin.property_street_no IS
    'Property Street Number';

COMMENT ON COLUMN bin.street_id IS
    'street id ';

COMMENT ON COLUMN bin.auth_name IS
    'authority name ';

COMMENT ON COLUMN bin.bin_size IS
    'bin size';

COMMENT ON COLUMN bin.waste_type_id IS
    'waste type id';

ALTER TABLE bin ADD CONSTRAINT bin_pk PRIMARY KEY ( bin_rfid );

CREATE TABLE bin_contract (
    bin_contract_no      NUMBER(20) NOT NULL,
    contract_no          NUMBER(5) NOT NULL,
    bin_size             NUMBER(3) NOT NULL,
    waste_type_id        CHAR(2) NOT NULL,
    contract_supply_cost NUMBER(5) NOT NULL
);

COMMENT ON COLUMN bin_contract.bin_contract_no IS
    'Surrogate key bin contract no';

COMMENT ON COLUMN bin_contract.contract_no IS
    'contract no';

COMMENT ON COLUMN bin_contract.bin_size IS
    'bin size';

COMMENT ON COLUMN bin_contract.waste_type_id IS
    'waste type id';

COMMENT ON COLUMN bin_contract.contract_supply_cost IS
    'contract supply cost';

ALTER TABLE bin_contract ADD CONSTRAINT bin_contract_pk PRIMARY KEY ( bin_contract_no
);

ALTER TABLE bin_contract
    ADD CONSTRAINT bin_contract_nk UNIQUE ( contract_no,
                                            bin_size,
                                            waste_type_id,
                                            contract_supply_cost );

CREATE TABLE bin_type (
    bin_size        NUMBER(3) NOT NULL,
    waste_type_id   CHAR(2) NOT NULL,
    bin_supply_cost NUMBER(2) NOT NULL
);

COMMENT ON COLUMN bin_type.bin_size IS
    'bin size';

COMMENT ON COLUMN bin_type.waste_type_id IS
    'waste type id';

COMMENT ON COLUMN bin_type.bin_supply_cost IS
    'bin supply cost';

ALTER TABLE bin_type ADD CONSTRAINT bin_type_pk PRIMARY KEY ( bin_size,
                                                              waste_type_id );

CREATE TABLE collection_bin (
    bin_rfid           CHAR(16) NOT NULL,
    date_of_collection DATE NOT NULL,
    contract_no        NUMBER(5) NOT NULL,
    waste_type_id      CHAR(2) NOT NULL,
    bin_collected_kg   NUMBER(2),
    bin_overweight     CHAR(1) NOT NULL
);

COMMENT ON COLUMN collection_bin.bin_rfid IS
    'Bin RFID';

COMMENT ON COLUMN collection_bin.date_of_collection IS
    'collection date';

COMMENT ON COLUMN collection_bin.contract_no IS
    'contract no';

COMMENT ON COLUMN collection_bin.waste_type_id IS
    'waste type id';

COMMENT ON COLUMN collection_bin.bin_collected_kg IS
    'bin collected kg';

COMMENT ON COLUMN collection_bin.bin_overweight IS
    'bin overweight';

ALTER TABLE collection_bin ADD CONSTRAINT collection_bin_pk PRIMARY KEY ( date_of_collection
,
                                                                          bin_rfid );

CREATE TABLE collection_detail (
    date_of_collection DATE NOT NULL,
    contract_no        NUMBER(5) NOT NULL,
    waste_type_id      CHAR(2) NOT NULL,
    truck_vin          VARCHAR2(17) NOT NULL,
    driver_no          NUMBER(2) NOT NULL
);

COMMENT ON COLUMN collection_detail.date_of_collection IS
    'collection date';

COMMENT ON COLUMN collection_detail.contract_no IS
    'contract no';

COMMENT ON COLUMN collection_detail.waste_type_id IS
    'waste type id';

COMMENT ON COLUMN collection_detail.truck_vin IS
    'truck vin ';

COMMENT ON COLUMN collection_detail.driver_no IS
    'driver number';

ALTER TABLE collection_detail
    ADD CONSTRAINT collection_detail_pk PRIMARY KEY ( date_of_collection,
                                                      contract_no,
                                                      waste_type_id );

CREATE TABLE collection_report (
    contract_no          NUMBER(5) NOT NULL,
    waste_type_id        CHAR(2) NOT NULL,
    collection_cost      NUMBER(5) NOT NULL,
    collection_frequency VARCHAR2(11) NOT NULL
);

ALTER TABLE collection_report
    ADD CONSTRAINT chk_collection_frequency CHECK ( collection_frequency IN ( 'F', 'M'
    , 'W' ) );

COMMENT ON COLUMN collection_report.contract_no IS
    'contract no';

COMMENT ON COLUMN collection_report.waste_type_id IS
    'waste type id';

COMMENT ON COLUMN collection_report.collection_cost IS
    'collection cost';

COMMENT ON COLUMN collection_report.collection_frequency IS
    'collection frequency';

ALTER TABLE collection_report ADD CONSTRAINT contract_waste_collection_pk PRIMARY KEY
( contract_no,
                                                                                  waste_type_id
                                                                                  );

CREATE TABLE contract (
    contract_no         NUMBER(5) NOT NULL,
    contract_start_date DATE NOT NULL,
    contract_end_date   DATE NOT NULL,
    auth_name           VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN contract.contract_no IS
    'contract no';

COMMENT ON COLUMN contract.contract_start_date IS
    'contract start date';

COMMENT ON COLUMN contract.contract_end_date IS
    'contract end date';

COMMENT ON COLUMN contract.auth_name IS
    'authority name ';

ALTER TABLE contract ADD CONSTRAINT contract_pk PRIMARY KEY ( contract_no );

CREATE TABLE driver (
    driver_no            NUMBER(2) NOT NULL,
    driver_licence_no    NUMBER(10) NOT NULL,
    driver_name          VARCHAR2(50) NOT NULL,
    driver_date_of_birth DATE NOT NULL,
    driver_taxfile_no    NUMBER(10) NOT NULL,
    driver_contact_no    CHAR(10) NOT NULL
);

COMMENT ON COLUMN driver.driver_no IS
    'driver number';

COMMENT ON COLUMN driver.driver_licence_no IS
    'driver licence number';

COMMENT ON COLUMN driver.driver_name IS
    'driver name ';

COMMENT ON COLUMN driver.driver_date_of_birth IS
    'driver date of birth';

COMMENT ON COLUMN driver.driver_taxfile_no IS
    'driver tax file number';

COMMENT ON COLUMN driver.driver_contact_no IS
    'driver contact number ';

ALTER TABLE driver ADD CONSTRAINT driver_pk PRIMARY KEY ( driver_no );

CREATE TABLE local_authority (
    auth_name             VARCHAR2(50) NOT NULL,
    auth_ceo_given_name   VARCHAR2(20) NOT NULL,
    auth_ceo_family_name  VARCHAR2(20) NOT NULL,
    auth_telephone_no     CHAR(10) NOT NULL,
    auth_total_area_sq_km NUMBER(7) NOT NULL,
    auth_type             VARCHAR2(20) NOT NULL
);

ALTER TABLE local_authority
    ADD CONSTRAINT chk_auth_type CHECK ( auth_type IN ( 'B', 'C', 'D', 'S', 'T' ) );

COMMENT ON COLUMN local_authority.auth_name IS
    'authority name ';

COMMENT ON COLUMN local_authority.auth_ceo_given_name IS
    'authority ceo given name';

COMMENT ON COLUMN local_authority.auth_ceo_family_name IS
    'authority ceo family name';

COMMENT ON COLUMN local_authority.auth_telephone_no IS
    'authority telephone number ';

COMMENT ON COLUMN local_authority.auth_total_area_sq_km IS
    'authorities total area in square kilometers';

COMMENT ON COLUMN local_authority.auth_type IS
    'authority type ';

ALTER TABLE local_authority ADD CONSTRAINT local_authority_pk PRIMARY KEY ( auth_name
);

CREATE TABLE owner (
    owner_id            NUMBER(10) NOT NULL,
    owner_name          VARCHAR2(50) NOT NULL,
    owner_email_address VARCHAR2(50) NOT NULL,
    owner_phone_number  CHAR(10) NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'Owner ID';

COMMENT ON COLUMN owner.owner_name IS
    'Owner Name';

COMMENT ON COLUMN owner.owner_email_address IS
    'Owner email address';

COMMENT ON COLUMN owner.owner_phone_number IS
    'Owner phone number';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE owner_property (
    owner_id           NUMBER(10) NOT NULL,
    property_street_no NUMBER(10) NOT NULL,
    street_id          NUMBER(10) NOT NULL,
    auth_name          VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN owner_property.owner_id IS
    'Owner ID';

COMMENT ON COLUMN owner_property.property_street_no IS
    'Property Street Number';

COMMENT ON COLUMN owner_property.street_id IS
    'street id ';

COMMENT ON COLUMN owner_property.auth_name IS
    'authority name ';

ALTER TABLE owner_property
    ADD CONSTRAINT owner_property_pk PRIMARY KEY ( owner_id,
                                                   property_street_no,
                                                   street_id,
                                                   auth_name );

CREATE TABLE property (
    property_street_no NUMBER(10) NOT NULL,
    street_id          NUMBER(10) NOT NULL,
    auth_name          VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN property.property_street_no IS
    'Property Street Number';

COMMENT ON COLUMN property.street_id IS
    'street id ';

COMMENT ON COLUMN property.auth_name IS
    'authority name ';

ALTER TABLE property
    ADD CONSTRAINT property_pk PRIMARY KEY ( property_street_no,
                                             street_id,
                                             auth_name );

CREATE TABLE street (
    street_id                NUMBER(10) NOT NULL,
    auth_name                VARCHAR2(50) NOT NULL,
    street_name              VARCHAR2(20) NOT NULL,
    street_length_meters     NUMBER(20) NOT NULL,
    street_road_surface_type VARCHAR2(20) NOT NULL,
    street_no_of_lanes       NUMBER(20) NOT NULL
);

ALTER TABLE street
    ADD CONSTRAINT chk_road_surface_types CHECK ( street_road_surface_type IN ( 'A', 'C'
    , 'U' ) );

COMMENT ON COLUMN street.street_id IS
    'street id ';

COMMENT ON COLUMN street.auth_name IS
    'authority name ';

COMMENT ON COLUMN street.street_name IS
    'street name ';

COMMENT ON COLUMN street.street_length_meters IS
    'street length in meters';

COMMENT ON COLUMN street.street_road_surface_type IS
    'street road surface type ';

COMMENT ON COLUMN street.street_no_of_lanes IS
    'street number of lanes';

ALTER TABLE street ADD CONSTRAINT street_pk PRIMARY KEY ( street_id,
                                                          auth_name );

CREATE TABLE waste_type (
    waste_type_id   CHAR(2) NOT NULL,
    waste_type_desc VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN waste_type.waste_type_id IS
    'waste type id';

COMMENT ON COLUMN waste_type.waste_type_desc IS
    'waste type description';

ALTER TABLE waste_type ADD CONSTRAINT waste_type_pk PRIMARY KEY ( waste_type_id );

ALTER TABLE authorised_truck_driver
    ADD CONSTRAINT authorisedtruck_trial FOREIGN KEY ( truck_vin )
        REFERENCES authorised_truck ( truck_vin );

ALTER TABLE collection_bin
    ADD CONSTRAINT bin_collectionbin FOREIGN KEY ( bin_rfid )
        REFERENCES bin ( bin_rfid );

ALTER TABLE bin_contract
    ADD CONSTRAINT bincontract_bintype FOREIGN KEY ( bin_size,
                                                     waste_type_id )
        REFERENCES bin_type ( bin_size,
                              waste_type_id );

ALTER TABLE bin
    ADD CONSTRAINT bintype_bin FOREIGN KEY ( bin_size,
                                             waste_type_id )
        REFERENCES bin_type ( bin_size,
                              waste_type_id );

ALTER TABLE bin_type
    ADD CONSTRAINT bintype_wastetype FOREIGN KEY ( waste_type_id )
        REFERENCES waste_type ( waste_type_id );

ALTER TABLE collection_bin
    ADD CONSTRAINT collectiondetail_collectionbin FOREIGN KEY ( date_of_collection,
                                                                contract_no,
                                                                waste_type_id )
        REFERENCES collection_detail ( date_of_collection,
                                       contract_no,
                                       waste_type_id );

ALTER TABLE collection_report
    ADD CONSTRAINT collectionreport_wastetype FOREIGN KEY ( waste_type_id )
        REFERENCES waste_type ( waste_type_id );

ALTER TABLE collection_detail
    ADD CONSTRAINT collectreport_collectdetail FOREIGN KEY ( contract_no,
                                                             waste_type_id )
        REFERENCES collection_report ( contract_no,
                                       waste_type_id );

ALTER TABLE bin_contract
    ADD CONSTRAINT contract_bincontract FOREIGN KEY ( contract_no )
        REFERENCES contract ( contract_no );

ALTER TABLE collection_report
    ADD CONSTRAINT contract_collectionreport FOREIGN KEY ( contract_no )
        REFERENCES contract ( contract_no );

ALTER TABLE authorised_truck_driver
    ADD CONSTRAINT driver_trial FOREIGN KEY ( driver_no )
        REFERENCES driver ( driver_no );

ALTER TABLE contract
    ADD CONSTRAINT localauthority_contract FOREIGN KEY ( auth_name )
        REFERENCES local_authority ( auth_name );

ALTER TABLE street
    ADD CONSTRAINT localauthority_street FOREIGN KEY ( auth_name )
        REFERENCES local_authority ( auth_name );

ALTER TABLE owner_property
    ADD CONSTRAINT owner_property FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE bin
    ADD CONSTRAINT property_bin FOREIGN KEY ( property_street_no,
                                              street_id,
                                              auth_name )
        REFERENCES property ( property_street_no,
                              street_id,
                              auth_name );

ALTER TABLE owner_property
    ADD CONSTRAINT property_owner FOREIGN KEY ( property_street_no,
                                                street_id,
                                                auth_name )
        REFERENCES property ( property_street_no,
                              street_id,
                              auth_name );

ALTER TABLE property
    ADD CONSTRAINT street_property FOREIGN KEY ( street_id,
                                                 auth_name )
        REFERENCES street ( street_id,
                            auth_name );

ALTER TABLE collection_detail
    ADD CONSTRAINT trial_collectiondetail FOREIGN KEY ( truck_vin,
                                                        driver_no )
        REFERENCES authorised_truck_driver ( truck_vin,
                                             driver_no );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             0
-- ALTER TABLE                             39
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
                                             
SPOOL OFF
SET ECHO OFF